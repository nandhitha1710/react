Event handling in React :
--event handling in react is how you make your app do some thing when the user interacts with it,

Like clicking a button , submitting a form
1)clicking a button (onClick)
2)pressing a key (keyDown)
3)moving the mouse (onMouseMove)
4)typing a text box (onChange) 

--how to use events in react  :
--use camelCase for event names
--pass a function to the event , this function will run when the event happens.

a)click event (onClick)

function App(){
  const handleClick=()=>{
    alert("Button clicked !")
  };
  return(
    <button onClick={handleClick}>Click me</button>
  )
}
export default App;

o/p : Click me

	b) Change event (onChange)
This happens when you type in the text box .
	
Key points :
Target is a property of the event object , and is predefined by javaScript for DOM events.
Event.target : always refers the element that triggered the event.
Event.target.value : used to access the value of input elements ,buttons,form elements
	

import React, { useState } from "react";
function App() {
  const [text, setText] = useState(""); // Corrected syntax
  const handleChange = (event) => {
    setText(event.target.value);
  };
  return (
    <div>
      <input type="text" value={text} onChange={handleChange} />
      <p>Your text: {text}</p>
    </div>
  );
}
export default App;


	c) Mouse events (onMouseEnter , onMouseLeave)


import React, { useState } from "react";
function App() {
  const [isHovered, setIsHovered] = useState(false);
  const handleMouseEnter = () => {
    setIsHovered(true);
  };
  const handleMouseLeave = () => {
    setIsHovered(false); // Corrected "False" to "false"
  };
  return (
    <div>
      <button
        onMouseEnter={handleMouseEnter}
        onMouseLeave={handleMouseLeave}
        style={{
          backgroundColor: isHovered ? "lightblue" : "lightgrey",
          color: isHovered ? "white" : "black",
        }}
      >
        Hover me
      </button>
    </div>
  );
}
export default App;
