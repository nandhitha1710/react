React Hooks :
---introduced on react 16.8 version
---to manage state and life cycle features in functional components.

State : 
It is an essential part of react because it allows components to be dynamic , ineractive and capable of responding to user input or change over time.
1)useStateHook:
useState allows you to add state to functional components.
Syntax : const[state , setState]=useState(initial value)
State - this is current state.
setState - this is a function to update the state.
Initial value : the value you want to set as the initial value



import React , {useState} from 'react';
//counter component
const Counter=()=>{
  const[count,SetCount]=useState(0);
  //current state=count
  //function to update state=setCount
  //use state() to initialize the state=0;
  return(
    <div>
      <h1>{count}</h1>
      <button onClick={()=>SetCount(count+1)}>Increment</button>
      <button onClick={()=>SetCount(count-1)}>Decrement</button>
    </div>
  );
};
export default Counter;


import React , {useState} from 'react';
const ThemeToggler=()=>{
  const[theme,setTheme]=useState("light")
  const toggleTheme=()=>{
    setTheme(prevTheme=>(prevTheme=='light'?'dark':'light'))
  }
  return(
    <div style={{backgroundColor:theme==='light'?'white':'black',color:theme=='light'?'black':'white', textAlign:'center'}}>
      <h1>The current theme is {theme}</h1>
      <button onClick={toggleTheme}>toggleTheme</button>

    </div>
  )
}
export default toggleTheme;
